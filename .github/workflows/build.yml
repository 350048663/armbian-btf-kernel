# This is a basic workflow to help you get started with Actions

name: CI

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
        matrix:
          include:
            - boardfamily: meson64
              branch: edge
              representative: aml-s9xx-box
        fail-fast: false
    runs-on: kix
    env:
      BOARD_FAMILY: ${{ matrix.boardfamily }}
      BRANCH: ${{ matrix.branch }}
      BOARD_NAME: ${{ matrix.representative }}

    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R $USER:$USER $GITHUB_WORKSPACE

      - uses: actions/checkout@v3
        with:
          repository: armbian/build
      
      - uses: actions/checkout@v3
        with:
          path: utils

      - name: Build Kernel
        run: |
          # Copy helper files.
          cp utils/* ./

          # Remove disabling DEBUG_INFO.
          sed -i 's/run_kernel_make olddefconfig/run_kernel_make KCONFIG_ALLCONFIG=.config alldefconfig/g' lib/functions/compilation/kernel-config.sh
          sed -i '/kernel_config_set_n DEBUG_INFO/d' lib/functions/compilation/armbian-kernel.sh

          # Enable BTF
          sed -i '/CONFIG_DEBUG_INFO/d' config/kernel/linux-"$BOARD_FAMILY"-"$BRANCH".config
          echo -e "CONFIG_DEBUG_INFO=y\nCONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT=y\nCONFIG_DEBUG_INFO_BTF=y" >> config/kernel/linux-"$BOARD_FAMILY"-"$BRANCH".config

          # Compile kernel.
          ./compile.sh RELEASE=jammy JUST_KERNEL=yes KERNEL_ONLY=yes BOARD="$BOARD_NAME" BRANCH="$BRANCH" KERNEL_CONFIGURE=no

      - name: Extract vmlinux
        id: vmlinux
        run: |
          pushd output/debs/
          fname=$(ls --format single-column linux-image-*.deb | head -n 1)
          id=$(echo $fname | cut -d- -f3-4)
          dpkg-deb -x "$fname" kernel
          filename=vmlinux_"$id"
          vmlinuz_file_src=$(realpath $(ls --format single-column kernel/boot/vmlinuz* | head -n 1))
          popd
          sh extract-vmlinux.sh $vmlinuz_file_src
          mv vmlinux "$filename"
          echo FILEPATH="$(realpath ${filename})" >> $GITHUB_OUTPUT

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.vmlinux.outputs.FILENAME }}
          path: ${{ steps.vmlinux.outputs.FILEPATH }}
